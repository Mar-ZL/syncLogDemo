<?xml version="1.0" encoding="UTF-8"?>
<beans  
    xmlns="http://www.springframework.org/schema/beans"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
    http://www.springframework.org/schema/context   
    http://www.springframework.org/schema/context/spring-context-3.2.xsd    
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd   
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">  
    
    <!-- 加载配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置数据源-->  
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">  
	    <property name="driverClass">  
	        <value>${jdbc.driver}</value>  
	    </property>  
	    <property name="jdbcUrl">  
	        <value>${jdbc.url}</value>  
	    </property>  
	    <property name="user">  
	        <value>${jdbc.username}</value>  
	    </property>  
	    <property name="password">  
	        <value>${jdbc.password}</value>  
	    </property>  
	    <property name="minPoolSize" value="2" />
        <property name="maxPoolSize" value="24" />
        <property name="maxIdleTime" value="60" />
        <property name="acquireIncrement" value="3" />
        <property name="maxStatements" value="0" />
        <property name="initialPoolSize" value="2" />
        <property name="idleConnectionTestPeriod" value="60" />
        <property name="acquireRetryAttempts" value="30" />
        <property name="preferredTestQuery" value="SELECT 1"/>    
        <property name="breakAfterAcquireFailure" value="true" />
        <property name="testConnectionOnCheckout" value="false" />
        <property name="checkoutTimeout" value="20000"></property> 
	</bean>  
	
	  <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="dataSource" ref="dataSource" />  
	    <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"></property>  
	</bean>
	
	<!-- mapper扫描 ,生成代理对象-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sitech.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" ></property>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="com.sitech.service"></context:component-scan>
	<context:component-scan base-package="com.sitech.thread"></context:component-scan>
	
	<!-- JDBC事务管理器-->  
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
	    <property name="dataSource" ref="dataSource" />  
	</bean> 
	
	<!--通知-->
	<tx:advice id="txAdvice" transaction-manager="txManager">  
			<tx:attributes>
	           <tx:method name="batchAddLog*"  isolation="READ_COMMITTED"  propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"/>
	           <tx:method name="syncLog*"  isolation="READ_COMMITTED"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	           <tx:method name="gather*"  isolation="READ_COMMITTED"  propagation="REQUIRED" rollback-for="java.lang.Exception"/>
	       </tx:attributes>  
	</tx:advice>  
	
	<!--aop-->
	<aop:config>  
	       <aop:pointcut id="txPointcut" expression="execution(* com.sitech.service.*.*(..))" />  
	       <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />  
	</aop:config>
	
	
	
</beans>